name: Build and Deploy

on:
  push:
    branches: ["main"]

defaults:
  run:
    shell: bash

jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      reuse: true

  deploy:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            image: ghcr.io/pobie/ubuntu-vulkan-cpp-dev:latest
          - os: macos-latest
          - os: windows-latest
    runs-on: ${{ matrix.os }}
    container:
      image: ${{ matrix.image }}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output-${{ github.run_id }}-${{ matrix.os }}
          path: deploy/

      - name: Make Editor Executable (macOS and Linux)
        if: matrix.os != 'windows-latest' && inputs.reuse == true
        run: |
          pushd  $GITHUB_WORKSPACE/deploy/editor/bin
          chmod +x deploy/editor/bin/TinkerEngine.Editor

      - name: Zip Library
        if: runner.os == 'Linux'
        run: |
          pushd deploy/core
          zip -r tinker-core-lib.zip *
          popd

      - name: Deploy Library
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: tinker-core-lib
          path: deploy/core/tinker-core-lib.zip

      - name: Zip Engine
        run: |
          pushd  $GITHUB_WORKSPACE/deploy/editor/bin
          zip -r tinker-engine-${{ matrix.os }}.zip *
          popd

      - name: Deploy Engine
        uses: actions/upload-artifact@v3
        with:
          name: tinker-engine-${{ matrix.os }}
          path: deploy/editor/bin/tinker-engine-${{ matrix.os }}.zip

  cleanup:
    needs: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: build-output-${{ github.run_id }}-${{ matrix.os }}
