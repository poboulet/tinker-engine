name: CMake on multiple platforms

on:
  pull_request:
    branches: ["main"]

env:
  PROJECT_SCRIPT_SHORTCUTS: ${{ github.workspace }}/bin/tinker

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        c_compiler: [clang]

    steps:
      - uses: actions/checkout@v3

      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev
          sudo apt-get install -y llvm clang cppcheck

      - name: Set reusable strings
        id: strings
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_ENV"

      - name: Install Conan
        shell: bash
        run: |
          pip install conan
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "C:\Python39\Scripts" >> $GITHUB_PATH
          else
            source ~/.profile
          fi
          conan profile detect --force

      - name: Build
        shell: bash
        run: $PROJECT_SCRIPT_SHORTCUTS build --tests

      - name: Test
        shell: bash
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: $PROJECT_SCRIPT_SHORTCUTS test

      - name: Lint
        shell: bash
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: $PROJECT_SCRIPT_SHORTCUTS lint

      - name: Validate
        shell: bash
        run: $PROJECT_SCRIPT_SHORTCUTS validate
