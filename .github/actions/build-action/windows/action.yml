name: "Build Action for Windows"
description: "Handles building, linting, testing, and validation for Windows."

inputs:
  chocoDeps:
    description: "Dependencies to install with Chocolatey for Windows."
    required: false
    default: ""
  shell:
    description: "Shell to use for running commands."
    required: false
    default: "bash"

runs:
  using: "composite"

  steps:
    - name: Setup Dependencies on Windows
      shell: ${{ inputs.shell }}
      run: |
        choco install ${{ inputs.chocoDeps }} --no-progress -y --ignore-package-exit-codes --ignore-detected-reboot
        echo "/c/Program Files/Cppcheck" >> $GITHUB_PATH

    - name: Check cppcheck
      shell: ${{ inputs.shell }}
      run: |
        cppcheck --version

    - name: Initialize and Bootstrap vcpkg
      shell: ${{ inputs.shell }}
      run: ./vcpkg/bootstrap-vcpkg.sh

    - name: Set Paths for Windows
      shell: ${{ inputs.shell }}
      run: |
        echo "PATH=C:\Program Files (x86)\Cppcheck\bin;$PATH" >> "$env:GITHUB_PATH"
        echo "PATH=C:\Program Files\LLVM\bin;$PATH" >> "$env:GITHUB_PATH"

    - name: Set reusable strings
      shell: ${{ inputs.shell }}
      run: |
        echo "BUILD_OUTPUT_DIR=${{ github.workspace }}\build" >> "$env:GITHUB_ENV"
        echo "DISTRIBUTION_DIR=$env:GITHUB_WORKSPACE\deploy" >> "$env:GITHUB_ENV"

    - name: Build
      shell: ${{ inputs.shell }}
      run: $PROJECT_SCRIPT_SHORTCUTS build --preset release-windows-x64 --tests

    - name: Lint
      shell: ${{ inputs.shell }}
      run: $PROJECT_SCRIPT_SHORTCUTS lint --preset release-windows-x64

    - name: Test
      shell: ${{ inputs.shell }}
      run: $PROJECT_SCRIPT_SHORTCUTS test --preset release-windows-x64

    - name: Validate
      shell: ${{ inputs.shell }}
      run: $PROJECT_SCRIPT_SHORTCUTS validate --preset release-windows-x64
